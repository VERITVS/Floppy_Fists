{
  "version": 3,
  "sources": ["../../three/examples/jsm/effects/AnaglyphEffect.js"],
  "sourcesContent": ["import {\n\tLinearFilter,\n\tMatrix3,\n\tNearestFilter,\n\tRGBAFormat,\n\tShaderMaterial,\n\tStereoCamera,\n\tWebGLRenderTarget\n} from 'three';\nimport { FullScreenQuad } from '../postprocessing/Pass.js';\n\nclass AnaglyphEffect {\n\n\tconstructor( renderer, width = 512, height = 512 ) {\n\n\t\t// Dubois matrices from https://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.7.6968&rep=rep1&type=pdf#page=4\n\n\t\tthis.colorMatrixLeft = new Matrix3().fromArray( [\n\t\t\t0.456100, - 0.0400822, - 0.0152161,\n\t\t\t0.500484, - 0.0378246, - 0.0205971,\n\t\t\t0.176381, - 0.0157589, - 0.00546856\n\t\t] );\n\n\t\tthis.colorMatrixRight = new Matrix3().fromArray( [\n\t\t\t- 0.0434706, 0.378476, - 0.0721527,\n\t\t\t- 0.0879388, 0.73364, - 0.112961,\n\t\t\t- 0.00155529, - 0.0184503, 1.2264\n\t\t] );\n\n\t\tconst _stereo = new StereoCamera();\n\n\t\tconst _params = { minFilter: LinearFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\tconst _renderTargetL = new WebGLRenderTarget( width, height, _params );\n\t\tconst _renderTargetR = new WebGLRenderTarget( width, height, _params );\n\n\t\tconst _material = new ShaderMaterial( {\n\n\t\t\tuniforms: {\n\n\t\t\t\t'mapLeft': { value: _renderTargetL.texture },\n\t\t\t\t'mapRight': { value: _renderTargetR.texture },\n\n\t\t\t\t'colorMatrixLeft': { value: this.colorMatrixLeft },\n\t\t\t\t'colorMatrixRight': { value: this.colorMatrixRight }\n\n\t\t\t},\n\n\t\t\tvertexShader: [\n\n\t\t\t\t'varying vec2 vUv;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t'\tvUv = vec2( uv.x, uv.y );',\n\t\t\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t'uniform sampler2D mapLeft;',\n\t\t\t\t'uniform sampler2D mapRight;',\n\t\t\t\t'varying vec2 vUv;',\n\n\t\t\t\t'uniform mat3 colorMatrixLeft;',\n\t\t\t\t'uniform mat3 colorMatrixRight;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t'\tvec2 uv = vUv;',\n\n\t\t\t\t'\tvec4 colorL = texture2D( mapLeft, uv );',\n\t\t\t\t'\tvec4 colorR = texture2D( mapRight, uv );',\n\n\t\t\t\t'\tvec3 color = clamp(',\n\t\t\t\t'\t\t\tcolorMatrixLeft * colorL.rgb +',\n\t\t\t\t'\t\t\tcolorMatrixRight * colorR.rgb, 0., 1. );',\n\n\t\t\t\t'\tgl_FragColor = vec4(',\n\t\t\t\t'\t\t\tcolor.r, color.g, color.b,',\n\t\t\t\t'\t\t\tmax( colorL.a, colorR.a ) );',\n\n\t\t\t\t'\t#include <tonemapping_fragment>',\n\t\t\t\t'\t#include <colorspace_fragment>',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' )\n\n\t\t} );\n\n\t\tconst _quad = new FullScreenQuad( _material );\n\n\t\tthis.setSize = function ( width, height ) {\n\n\t\t\trenderer.setSize( width, height );\n\n\t\t\tconst pixelRatio = renderer.getPixelRatio();\n\n\t\t\t_renderTargetL.setSize( width * pixelRatio, height * pixelRatio );\n\t\t\t_renderTargetR.setSize( width * pixelRatio, height * pixelRatio );\n\n\t\t};\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\t_stereo.update( camera );\n\n\t\t\trenderer.setRenderTarget( _renderTargetL );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, _stereo.cameraL );\n\n\t\t\trenderer.setRenderTarget( _renderTargetR );\n\t\t\trenderer.clear();\n\t\t\trenderer.render( scene, _stereo.cameraR );\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\t_quad.render( renderer );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t};\n\n\t\tthis.dispose = function () {\n\n\t\t\t_renderTargetL.dispose();\n\t\t\t_renderTargetR.dispose();\n\n\t\t\t_material.dispose();\n\t\t\t_quad.dispose();\n\n\t\t};\n\n\t}\n\n}\n\nexport { AnaglyphEffect };\n"],
  "mappings": ";;;;;;;;;;;;;;AAWA,IAAM,iBAAN,MAAqB;AAAA,EAEpB,YAAa,UAAU,QAAQ,KAAK,SAAS,KAAM;AAIlD,SAAK,kBAAkB,IAAI,QAAQ,EAAE,UAAW;AAAA,MAC/C;AAAA,MAAU;AAAA,MAAa;AAAA,MACvB;AAAA,MAAU;AAAA,MAAa;AAAA,MACvB;AAAA,MAAU;AAAA,MAAa;AAAA,IACxB,CAAE;AAEF,SAAK,mBAAmB,IAAI,QAAQ,EAAE,UAAW;AAAA,MAChD;AAAA,MAAa;AAAA,MAAU;AAAA,MACvB;AAAA,MAAa;AAAA,MAAS;AAAA,MACtB;AAAA,MAAc;AAAA,MAAa;AAAA,IAC5B,CAAE;AAEF,UAAM,UAAU,IAAI,aAAa;AAEjC,UAAM,UAAU,EAAE,WAAW,cAAc,WAAW,eAAe,QAAQ,WAAW;AAExF,UAAM,iBAAiB,IAAI,kBAAmB,OAAO,QAAQ,OAAQ;AACrE,UAAM,iBAAiB,IAAI,kBAAmB,OAAO,QAAQ,OAAQ;AAErE,UAAM,YAAY,IAAI,eAAgB;AAAA,MAErC,UAAU;AAAA,QAET,WAAW,EAAE,OAAO,eAAe,QAAQ;AAAA,QAC3C,YAAY,EAAE,OAAO,eAAe,QAAQ;AAAA,QAE5C,mBAAmB,EAAE,OAAO,KAAK,gBAAgB;AAAA,QACjD,oBAAoB,EAAE,OAAO,KAAK,iBAAiB;AAAA,MAEpD;AAAA,MAEA,cAAc;AAAA,QAEb;AAAA,QAEA;AAAA,QAEA;AAAA,QACA;AAAA,QAEA;AAAA,MAED,EAAE,KAAM,IAAK;AAAA,MAEb,gBAAgB;AAAA,QAEf;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QAEA;AAAA,MAED,EAAE,KAAM,IAAK;AAAA,IAEd,CAAE;AAEF,UAAM,QAAQ,IAAI,eAAgB,SAAU;AAE5C,SAAK,UAAU,SAAWA,QAAOC,SAAS;AAEzC,eAAS,QAASD,QAAOC,OAAO;AAEhC,YAAM,aAAa,SAAS,cAAc;AAE1C,qBAAe,QAASD,SAAQ,YAAYC,UAAS,UAAW;AAChE,qBAAe,QAASD,SAAQ,YAAYC,UAAS,UAAW;AAAA,IAEjE;AAEA,SAAK,SAAS,SAAW,OAAO,QAAS;AAExC,YAAM,sBAAsB,SAAS,gBAAgB;AAErD,UAAK,MAAM,0BAA0B,KAAO,OAAM,kBAAkB;AAEpE,UAAK,OAAO,WAAW,QAAQ,OAAO,0BAA0B,KAAO,QAAO,kBAAkB;AAEhG,cAAQ,OAAQ,MAAO;AAEvB,eAAS,gBAAiB,cAAe;AACzC,eAAS,MAAM;AACf,eAAS,OAAQ,OAAO,QAAQ,OAAQ;AAExC,eAAS,gBAAiB,cAAe;AACzC,eAAS,MAAM;AACf,eAAS,OAAQ,OAAO,QAAQ,OAAQ;AAExC,eAAS,gBAAiB,IAAK;AAC/B,YAAM,OAAQ,QAAS;AAEvB,eAAS,gBAAiB,mBAAoB;AAAA,IAE/C;AAEA,SAAK,UAAU,WAAY;AAE1B,qBAAe,QAAQ;AACvB,qBAAe,QAAQ;AAEvB,gBAAU,QAAQ;AAClB,YAAM,QAAQ;AAAA,IAEf;AAAA,EAED;AAED;",
  "names": ["width", "height"]
}
